syntax = "proto3";

package percona.platform.dbaas.controller.v1beta1;

option go_package = "controller;controllerv1beta1";

// KubernetesClusterStatus defines status of Kubernetes cluster.
enum KubernetesClusterStatus {
  // KUBERNETES_CLUSTER_STATUS_INVALID represents unknown state.
  KUBERNETES_CLUSTER_STATUS_INVALID = 0;
  // KUBERNETES_CLUSTER_STATUS_OK represents that Kubernetes cluster is accessible.
  KUBERNETES_CLUSTER_STATUS_OK = 1;
  // KUBERNETES_CLUSTER_STATUS_UNAVAILABLE represents that Kubernetes cluster is not accessible.
  KUBERNETES_CLUSTER_STATUS_UNAVAILABLE = 2;
}

// Operators contains list of operators installed in Kubernetes cluster.
message Operators {
  // Percona PXC Cluster Operator Version.
  string pxc_operator_version = 1;
  // Percona Server for MongoDB Operator Version.
  string psmdb_operator_version = 2;
}

// Resources contains Kubernetes cluster resources.
message Resources {
  // Memory in bytes.
  uint64 memory_bytes = 1;
  // CPU in millicpus. For example 0.1 of CPU is equivalent to 100 millicpus.
  // See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu.
  uint64 cpu_m = 2;
  // Disk size in bytes.
  // NOTE: Values are large for AWS EBS because there is a rather loose limit of
  // how much storage one can request. Maximum is 39*16TiB per node. It gets out
  // of int64 range fast even for small clusters, that's why we use uint64.
  uint64 disk_size = 3;
}
