syntax = "proto3";

package percona.platform.dbaas.controller.v1beta1;

option go_package = "controller;controllerv1beta1";

import "controller/common.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

// PSMDBClusterState represents PSMDB cluster CR state.
enum PSMDBClusterState {
  // PSMDB_CLUSTER_STATE_INVALID represents unknown state.
  PSMDB_CLUSTER_STATE_INVALID = 0;
  // PSMDB_CLUSTER_STATE_CHANGING represents a cluster being changed (initializing).
  PSMDB_CLUSTER_STATE_CHANGING = 1;
  // PSMDB_CLUSTER_STATE_READY represents a cluster without pending changes (ready).
  PSMDB_CLUSTER_STATE_READY = 2;
  // PSMDB_CLUSTER_STATE_FAILED represents a failed cluster (error).
  PSMDB_CLUSTER_STATE_FAILED = 3;
  // PSMDB_CLUSTER_STATE_DELETING represents a cluster being deleting.
  PSMDB_CLUSTER_STATE_DELETING = 4;
  // PSMDB_CLUSTER_STATE_PAUSED represents a paused cluster state.
  PSMDB_CLUSTER_STATE_PAUSED = 5;
  // PSMDB_CLUSTER_STATE_UPGRADING represents cluster state that is undergoing a upgrade.
  PSMDB_CLUSTER_STATE_UPGRADING = 6;
}

// PSMDBBackupState represents PSMDB backup CR state.
enum PSMDBBackupState {
  // PSMDB_BACKUP_STATE_INVALID represents unknown state.
  PSMDB_BACKUP_STATE_INVALID = 0;
  // PSMDB_BACKUP_STATE_RUNNING represents running backup (waiting, requested, running, FIXME check it).
  PSMDB_BACKUP_STATE_RUNNING = 1;
  // PSMDB_BACKUP_STATE_SUCCEEDED represents succeeded backup (ready, FIXME check it).
  PSMDB_BACKUP_STATE_SUCCEEDED = 2;
  // PSMDB_BACKUP_STATE_FAILED represents failed backup (rejected, error, FIXME check it).
  PSMDB_BACKUP_STATE_FAILED = 3;
}

// TODO PSMDBRestoreState

// PSMDBClusterParams represents PSMDB cluster parameters that can be updated.
message PSMDBClusterParams {
  // ReplicaSet container parameters.
  message ReplicaSet {
    // Requested compute resources.
    ComputeResources compute_resources = 1;
    // Disk size in bytes.
    int64 disk_size = 2 [
      (validator.field) = {
        int_gt: 0
      }
    ];
  }
  // Cluster size.
  int32 cluster_size = 1 [
    (validator.field) = {
      int_gt: 0
    }
  ];
  // Replicaset container parameters.
  ReplicaSet replicaset = 2 [
    (validator.field) = {
      msg_exists: true
    }
  ];
  // Docker image used for PSMDB.
  string image = 3;
  // Version service URL.
  string version_service_url = 4;
}

// PSMDBCredentials represents the credentials needed to connect to the cluster.
message PSMDBCredentials {
  // MongoDB host.
  string host = 1;
  // MongoDB port.
  int32 port = 2;
  // MongoDB username.
  string username = 3;
  // MongoDB password.
  string password = 4;
  // Replicaset name.
  string replicaset = 5;
}
