// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: controller/pxc_cluster_backup_api.proto

package controllerv1beta1

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ListPXCClusterBackupsRequest) Validate() error {
	if nil == this.KubeAuth {
		return github_com_mwitkow_go_proto_validators.FieldError("KubeAuth", fmt.Errorf("message must exist"))
	}
	if this.KubeAuth != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.KubeAuth); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("KubeAuth", err)
		}
	}
	return nil
}
func (this *ListPXCClusterBackupsResponse) Validate() error {
	for _, item := range this.Backups {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Backups", err)
			}
		}
	}
	return nil
}
func (this *ListPXCClusterBackupsResponse_Backup) Validate() error {
	if this.StartTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.StartTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("StartTime", err)
		}
	}
	if this.FinishTime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.FinishTime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("FinishTime", err)
		}
	}
	if this.Operation != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Operation); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Operation", err)
		}
	}
	return nil
}
func (this *CreatePXCClusterBackupRequest) Validate() error {
	if nil == this.KubeAuth {
		return github_com_mwitkow_go_proto_validators.FieldError("KubeAuth", fmt.Errorf("message must exist"))
	}
	if this.KubeAuth != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.KubeAuth); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("KubeAuth", err)
		}
	}
	if this.ClusterName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("ClusterName", fmt.Errorf(`value '%v' must not be an empty string`, this.ClusterName))
	}
	if this.BackupName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("BackupName", fmt.Errorf(`value '%v' must not be an empty string`, this.BackupName))
	}
	return nil
}
func (this *CreatePXCClusterBackupResponse) Validate() error {
	return nil
}
func (this *DeletePXCClusterBackupRequest) Validate() error {
	if nil == this.KubeAuth {
		return github_com_mwitkow_go_proto_validators.FieldError("KubeAuth", fmt.Errorf("message must exist"))
	}
	if this.KubeAuth != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.KubeAuth); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("KubeAuth", err)
		}
	}
	if this.BackupName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("BackupName", fmt.Errorf(`value '%v' must not be an empty string`, this.BackupName))
	}
	return nil
}
func (this *DeletePXCClusterBackupResponse) Validate() error {
	return nil
}
