// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: controller/common.proto

package controllerv1beta1

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// DBClusterState represents DB cluster CR state.
type DBClusterState int32

const (
	// DB_CLUSTER_STATE_INVALID represents unknown state.
	DBClusterState_DB_CLUSTER_STATE_INVALID DBClusterState = 0
	// DB_CLUSTER_STATE_CHANGING represents a cluster being changed (initializing).
	DBClusterState_DB_CLUSTER_STATE_CHANGING DBClusterState = 1
	// DB_CLUSTER_STATE_READY represents a cluster without pending changes (ready).
	DBClusterState_DB_CLUSTER_STATE_READY DBClusterState = 2
	// DB_CLUSTER_STATE_FAILED represents a failed cluster (error).
	DBClusterState_DB_CLUSTER_STATE_FAILED DBClusterState = 3
	// DB_CLUSTER_STATE_DELETING represents a cluster being deleting.
	DBClusterState_DB_CLUSTER_STATE_DELETING DBClusterState = 4
	// DB_CLUSTER_STATE_PAUSED represents a paused cluster state.
	DBClusterState_DB_CLUSTER_STATE_PAUSED DBClusterState = 5
	// DB_CLUSTER_STATE_UPGRADING represents cluster state that is undergoing an upgrade.
	DBClusterState_DB_CLUSTER_STATE_UPGRADING DBClusterState = 6
)

// Enum value maps for DBClusterState.
var (
	DBClusterState_name = map[int32]string{
		0: "DB_CLUSTER_STATE_INVALID",
		1: "DB_CLUSTER_STATE_CHANGING",
		2: "DB_CLUSTER_STATE_READY",
		3: "DB_CLUSTER_STATE_FAILED",
		4: "DB_CLUSTER_STATE_DELETING",
		5: "DB_CLUSTER_STATE_PAUSED",
		6: "DB_CLUSTER_STATE_UPGRADING",
	}
	DBClusterState_value = map[string]int32{
		"DB_CLUSTER_STATE_INVALID":   0,
		"DB_CLUSTER_STATE_CHANGING":  1,
		"DB_CLUSTER_STATE_READY":     2,
		"DB_CLUSTER_STATE_FAILED":    3,
		"DB_CLUSTER_STATE_DELETING":  4,
		"DB_CLUSTER_STATE_PAUSED":    5,
		"DB_CLUSTER_STATE_UPGRADING": 6,
	}
)

func (x DBClusterState) Enum() *DBClusterState {
	p := new(DBClusterState)
	*p = x
	return p
}

func (x DBClusterState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DBClusterState) Descriptor() protoreflect.EnumDescriptor {
	return file_controller_common_proto_enumTypes[0].Descriptor()
}

func (DBClusterState) Type() protoreflect.EnumType {
	return &file_controller_common_proto_enumTypes[0]
}

func (x DBClusterState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DBClusterState.Descriptor instead.
func (DBClusterState) EnumDescriptor() ([]byte, []int) {
	return file_controller_common_proto_rawDescGZIP(), []int{0}
}

// RunningOperation respresents a long-running operation.
type RunningOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Finished steps of the operaion; can decrease or increase compared to the previous value.
	FinishedSteps int32 `protobuf:"varint,1,opt,name=finished_steps,json=finishedSteps,proto3" json:"finished_steps,omitempty"`
	// Text describing the current operation progress step.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Total steps needed to finish the operation; can decrease or increase compared to the previous value.
	TotalSteps int32 `protobuf:"varint,3,opt,name=total_steps,json=totalSteps,proto3" json:"total_steps,omitempty"`
}

func (x *RunningOperation) Reset() {
	*x = RunningOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningOperation) ProtoMessage() {}

func (x *RunningOperation) ProtoReflect() protoreflect.Message {
	mi := &file_controller_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningOperation.ProtoReflect.Descriptor instead.
func (*RunningOperation) Descriptor() ([]byte, []int) {
	return file_controller_common_proto_rawDescGZIP(), []int{0}
}

func (x *RunningOperation) GetFinishedSteps() int32 {
	if x != nil {
		return x.FinishedSteps
	}
	return 0
}

func (x *RunningOperation) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RunningOperation) GetTotalSteps() int32 {
	if x != nil {
		return x.TotalSteps
	}
	return 0
}

// KubeAuth represents Kubernetes / kubectl authentication and authorization information.
type KubeAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kubeconfig file content.
	Kubeconfig string `protobuf:"bytes,1,opt,name=kubeconfig,proto3" json:"kubeconfig,omitempty"`
}

func (x *KubeAuth) Reset() {
	*x = KubeAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubeAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubeAuth) ProtoMessage() {}

func (x *KubeAuth) ProtoReflect() protoreflect.Message {
	mi := &file_controller_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubeAuth.ProtoReflect.Descriptor instead.
func (*KubeAuth) Descriptor() ([]byte, []int) {
	return file_controller_common_proto_rawDescGZIP(), []int{1}
}

func (x *KubeAuth) GetKubeconfig() string {
	if x != nil {
		return x.Kubeconfig
	}
	return ""
}

// ComputeResources represents container computer resources requests or limits.
type ComputeResources struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// CPUs in milliCPUs; 1000m = 1 vCPU.
	CpuM int32 `protobuf:"varint,1,opt,name=cpu_m,json=cpuM,proto3" json:"cpu_m,omitempty"`
	// Memory in bytes.
	MemoryBytes int64 `protobuf:"varint,2,opt,name=memory_bytes,json=memoryBytes,proto3" json:"memory_bytes,omitempty"`
}

func (x *ComputeResources) Reset() {
	*x = ComputeResources{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeResources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeResources) ProtoMessage() {}

func (x *ComputeResources) ProtoReflect() protoreflect.Message {
	mi := &file_controller_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeResources.ProtoReflect.Descriptor instead.
func (*ComputeResources) Descriptor() ([]byte, []int) {
	return file_controller_common_proto_rawDescGZIP(), []int{2}
}

func (x *ComputeResources) GetCpuM() int32 {
	if x != nil {
		return x.CpuM
	}
	return 0
}

func (x *ComputeResources) GetMemoryBytes() int64 {
	if x != nil {
		return x.MemoryBytes
	}
	return 0
}

// PMMParams represents params related to pmm. If nil do not turn on monitoring.
type PMMParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PMM server public address.
	PublicAddress string `protobuf:"bytes,1,opt,name=public_address,json=publicAddress,proto3" json:"public_address,omitempty"`
	// PMM server admin login.
	Login string `protobuf:"bytes,2,opt,name=login,proto3" json:"login,omitempty"`
	// PMM server admin password.
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *PMMParams) Reset() {
	*x = PMMParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_controller_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PMMParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PMMParams) ProtoMessage() {}

func (x *PMMParams) ProtoReflect() protoreflect.Message {
	mi := &file_controller_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PMMParams.ProtoReflect.Descriptor instead.
func (*PMMParams) Descriptor() ([]byte, []int) {
	return file_controller_common_proto_rawDescGZIP(), []int{3}
}

func (x *PMMParams) GetPublicAddress() string {
	if x != nil {
		return x.PublicAddress
	}
	return ""
}

func (x *PMMParams) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *PMMParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

var File_controller_common_proto protoreflect.FileDescriptor

var file_controller_common_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x29, 0x70, 0x65, 0x72, 0x63, 0x6f,
	0x6e, 0x61, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x64, 0x62, 0x61, 0x61,
	0x73, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x10,
	0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x65,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x53, 0x74, 0x65, 0x70, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x65, 0x70, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x65,
	0x70, 0x73, 0x22, 0x32, 0x0a, 0x08, 0x4b, 0x75, 0x62, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x26,
	0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0a, 0x6b, 0x75, 0x62, 0x65,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x4a, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x63, 0x70,
	0x75, 0x5f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x70, 0x75, 0x4d, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x22, 0x7c, 0x0a, 0x09, 0x50, 0x4d, 0x4d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x2d, 0x0a, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52,
	0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2,
	0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x2a, 0xe2, 0x01, 0x0a, 0x0e, 0x44, 0x42, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x42, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45,
	0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x42, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x1a, 0x0a, 0x16, 0x44, 0x42, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17,
	0x44, 0x42, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x42, 0x5f,
	0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x42, 0x5f, 0x43,
	0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x41, 0x55,
	0x53, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x42, 0x5f, 0x43, 0x4c, 0x55, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x06, 0x42, 0x1e, 0x5a, 0x1c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_controller_common_proto_rawDescOnce sync.Once
	file_controller_common_proto_rawDescData = file_controller_common_proto_rawDesc
)

func file_controller_common_proto_rawDescGZIP() []byte {
	file_controller_common_proto_rawDescOnce.Do(func() {
		file_controller_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_controller_common_proto_rawDescData)
	})
	return file_controller_common_proto_rawDescData
}

var file_controller_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_controller_common_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_controller_common_proto_goTypes = []interface{}{
	(DBClusterState)(0),      // 0: percona.platform.dbaas.controller.v1beta1.DBClusterState
	(*RunningOperation)(nil), // 1: percona.platform.dbaas.controller.v1beta1.RunningOperation
	(*KubeAuth)(nil),         // 2: percona.platform.dbaas.controller.v1beta1.KubeAuth
	(*ComputeResources)(nil), // 3: percona.platform.dbaas.controller.v1beta1.ComputeResources
	(*PMMParams)(nil),        // 4: percona.platform.dbaas.controller.v1beta1.PMMParams
}
var file_controller_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_controller_common_proto_init() }
func file_controller_common_proto_init() {
	if File_controller_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_controller_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubeAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeResources); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_controller_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PMMParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_controller_common_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_controller_common_proto_goTypes,
		DependencyIndexes: file_controller_common_proto_depIdxs,
		EnumInfos:         file_controller_common_proto_enumTypes,
		MessageInfos:      file_controller_common_proto_msgTypes,
	}.Build()
	File_controller_common_proto = out.File
	file_controller_common_proto_rawDesc = nil
	file_controller_common_proto_goTypes = nil
	file_controller_common_proto_depIdxs = nil
}
